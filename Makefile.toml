[tasks.BUILD]
description = "Build project for development"
script = ['''
#!/bin/bash
cargo build --features "bevy/dynamic_linking pause"
''']

[tasks.DEV]
description = "Run project for development"
script = ['''
#!/bin/bash
cargo run --features "bevy/dynamic_linking pause"
''']

[tasks.windowsDEV]
description = "Run project for development on windows"
condition = { platforms = ["windows"] }
command = "cargo run --features \"bevy/dynamic_linking pause\""

[tasks.wasmDEV]
description = "Run project for development"
script = ['''
#!/bin/bash
cargo run --target wasm32-unknown-unknown --features bevy/dynamic_linking pause
''']

[tasks.BETA]
description = "Build project for beta"
script = ['''
#!/bin/bash
cargo build --release --features pause
''']

[tasks.windowsBETA]
description = "Run project for beta on windows"
condition = { platforms = ["windows"] }
command = "cargo run --release --features pause"

[tasks.RELEASE]
description = "Build project for release"
script = ['''
#/bin/bash
cargo build --release
''']

[tasks.wasmRELEASE]
description = "Build project for release"
script = ['''
#/bin/bash
cargo build --target wasm32-unknown-unknown --release
''']

[tasks.windowsRELEASE]
description = "Build project for release on windows"
condition = { platforms = ["windows"] }
command = "cargo run --release"

[tasks.wasmDEPLOY]
description = "create wasm directory to deploy, and launch the local server to test"
script = ['''
#!/bin/bash
rm -r ./docs/*
wasm-bindgen --no-typescript --target web --out-dir ./docs --out-name "dynamicarena" ./target/wasm32-unknown-unknown/release/dynamicarena.wasm
mkdir ./docs/assets
mkdir ./docs/assets/images
cp -r assets/fonts ./docs/assets/fonts
cp -r assets/images/web ./docs/assets/images/web
cp -r assets/sounds ./docs/assets/sounds
cp ./wasm_build/index.html docs/index.html

temp_file=$(mktemp)
cat ./wasm_build/enable_sound.js ./docs/dynamicarena.js > $temp_file
mv $temp_file ./docs/dynamicarena.js

cd docs
python3 -m http.server 8000
''']
